jose1_away_point$Probability<-jose1_away_point$n/60
jose1_away_point
# Creating a tibble
my_table <- tibble(Coach_name =c("Sir_Alex","Pep","Klopp","Jose"),Prob_of_wining_away_games= c(0.55,0.689,0.683,0.65),prob_of_home_games=c(0.75,0.781,0.68,0.767) )
my_table
my_table$sum_of_prob<-my_table$Prob_of_wining_away_games+my_table$prob_of_home_games
my_table
my_table %>% ggplot(mapping = aes(x=Coach_name,y=sum_of_prob))+geom_col()+coord_flip()+ggtitle("The best Coach in the Premier Legue ")
knitr::opts_chunk$set(echo = TRUE)
Data<-read.csv("C:\\Users\\CHOLA\\Desktop\\my_data.csv")
head(Data)
names(Data)
library(tidyverse)
PL<-Data %>%
arrange(Season_End_Year,Wk)%>%
select(Season_End_Year,Wk,Date,Home,HomeGoals,AwayGoals,Away,Date) %>% mutate(Date=ymd(Date))
colSums(is.na(PL))
str(PL)
PL$FTR<- case_when(
PL$HomeGoals>PL$AwayGoals~"HOME_WINS",
PL$HomeGoals<PL$AwayGoals~"AWAY_WINS",
PL$HomeGoals==PL$AwayGoals~"DRAWS"
)
summary(PL)
table(PL$Season_End_Year)
#We are going to generate a new dataframe that includes the percentage of different game results, where 'H' denotes a home team win, 'A' denotes an away team win, and 'D' denotes a draw.
Home_vs_Away<-count(PL,FTR) %>% arrange(desc(n))
Home_vs_Away$percentage<-(Home_vs_Away$n/sum((Home_vs_Away$n)))*100
ggplot(data = Home_vs_Away,aes(x=reorder(FTR,-percentage),y=percentage))+
geom_col()+labs(title = "Percentage winning rate")
home_vs_away<-na.omit(Home_vs_Away)
ggplot(data=home_vs_away,mapping = aes(x=FTR,y=percentage))+geom_col()+coord_flip()+labs(title = "Games won at Home and away")
home_vs_away$probability<-(home_vs_away$n/sum((home_vs_away$n)))
home_vs_away
## new dataframe counting final results by every year
point_year<-PL%>%
group_by(Season_End_Year)%>%
count(FTR)
point_year
## calculating the points that collected in a home and away ground
point_year$points<-case_when(point_year$FTR=="HOME_WINS"~point_year$n*3,
point_year$FTR=="AWAY_WINS"~point_year$n*3,
point_year$FTR=="DRAWS"~point_year$n*1
)
point_year
## creating a new column"h_points" that summation points that collected in home ground either "h_points" to away points
point_year2<-na.omit(point_year)%>%
group_by(Season_End_Year)%>%
summarize(home_points=points[FTR=="HOME_WINS"]+points[FTR=="DRAWS"],away_points=(points[FTR=="AWAY_WINS"])+points[FTR=="DRAWS"])
point_year2
## tidying the data
point_year3<-point_year2%>%
pivot_longer(c(`home_points`, `away_points`), names_to = "Home_vs_Away", values_to = "Points")
point_year3
ggplot(data = point_year3,aes(x=Season_End_Year,y=Points,col=Home_vs_Away))+
geom_line()+
theme(legend.title=element_blank())+
theme(legend.position=c(0.9,0.9))+
scale_color_manual(labels = c("Away", "Home"),
values = c( "red", "blue"))+
ggtitle("Total points collected by the teams Home vs Away")+
xlab("Season end year")+
ylab("Total points")
## new dataframe counting the Home, Away and Draw through the years
home_vs_away_years<-PL %>%
group_by(Season_End_Year,FTR)%>%
count(FTR)
##the percentage of every case
home_vs_away_years$Season_End_Year<-as.numeric(home_vs_away_years$Season_End_Year)
home_vs_away_years$percentage<- case_when(
home_vs_away_years$Season_End_Year==1993~home_vs_away_years$n*100/462,
home_vs_away_years$Season_End_Year==1994~home_vs_away_years$n*100/462,
home_vs_away_years$Season_End_Year==1995~home_vs_away_years$n*100/462,
TRUE ~ home_vs_away_years$n*100/380
)
home_vs_away_year<-na.omit(home_vs_away_years)
home_vs_away_year
away_games_year<-home_vs_away_year %>% filter(FTR=="AWAY_WINS")
ggplot(data = away_games_year,mapping = aes(x=Season_End_Year,y=percentage))+geom_line()+labs(title = "Plot of the away games winning percentage"  )
Home_wins<-home_vs_away_year %>% filter(FTR=="HOME_WINS")
ggplot(data = Home_wins,mapping = aes(x=Season_End_Year,y=percentage))+geom_line()+labs(title = "Home winning percentage")
home_goals_vs_away_goals<-PL %>%
group_by(Season_End_Year)%>%
summarise(all_home_goals=sum(HomeGoals),all_away_goals=sum(AwayGoals))
home_goals_vs_away_goals2<-home_goals_vs_away_goals %>% pivot_longer(cols = c('all_home_goals','all_away_goals'),names_to = 'Home_and_away_goals',values_to = 'total_goals')
home_vs_away_goals3<-na.omit(home_goals_vs_away_goals2)
ggplot(data = home_vs_away_goals3,mapping = aes(x=Season_End_Year,y=total_goals,col=Home_and_away_goals,))+geom_line()
## new dataframe with only results of 2020-2021 season
season_2021<-subset(PL,Season_End_Year=="2021")
point_2021<-season_2021%>%
group_by(Season_End_Year)%>%
count(FTR)
point_2021
ggplot(data =point_2021,mapping=aes(x=FTR,y=n))+
geom_col()+coord_flip()+
ggtitle("Home vs Away winning in 2021 season")+
ylab("Numbers of matches")+
xlab("The Results")
## new dataframe to calculate the home results for each PL team
home_point<-PL %>%
group_by(Home)%>%
count(FTR)
Home_points<-na.omit(home_point)
## replacing "H" by "W" for winning, "A" by "L" for losing and "D" still "D" for draw
Home_points$FTR[Home_points$FTR=="HOME_WINS"]<-"W"
Home_points$FTR[Home_points$FTR=="AWAY_WINS"]<-"L"
Home_points$FTR[Home_points$FTR=="DRAWS"]<-"D"
## calculating the points collected at home ground by each team
## as we know the winning team get three points, the losing team take nothing, and 1 point for each team during draw
Home_points$points<- case_when(Home_points$FTR=="L"~Home_points$n*0,
Home_points$FTR=="W"~Home_points$n*3,
Home_points$FTR=="D"~Home_points$n*1
)
home_point2<-Home_points%>%
group_by(Home)%>%
summarize(T_point=sum(points))
ggplot(data = home_point2,aes(x=T_point,y=reorder(Home,T_point),fill=Home))+
geom_col()+
ggtitle("Points by team in Home ground")+
ylab("Team")+
xlab("Points")
## new dataframe to calculate the home results for each PL team
away_point<-PL %>%
group_by(Away)%>%
count(FTR)
Away_point<-na.omit(away_point)
## replacing "H" by "L" for losing, "A" by "W" for winning and "D" still "D" for draw
Away_point$FTR[Away_point$FTR=="HOME_WINS"]<-"L"
Away_point$FTR[Away_point$FTR=="AWAY_WINS"]<-"W"
Away_point$FTR[Away_point$FTR=="DRAWS"]<-"D"
## calculating the points collected at away ground by each team
## as we know the winning team get three points, the losing team take nothing, and 1 point for each team during draw
Away_point$points<- case_when(Away_point$FTR=="L"~Away_point$n*0,
Away_point$FTR=="W"~Away_point$n*3,
Away_point$FTR=="D"~Away_point$n*1
)
away_point2<-Away_point%>%
group_by(Away)%>%
summarize(T_point=sum(points))
ggplot(data = away_point2,aes(x=T_point,y=reorder(Away,T_point),fill=Away))+
geom_col()+
ggtitle("Points by team in Away ground")+
ylab("Team")+
xlab("Points")
## to see how many Home teams scored by end of the match
table(PL$HomeGoals)
## to see how many Away teams scored by end of the match
table(PL$AwayGoals)
PL_r<-na.omit(PL)
## creating a matrix with 4 variables
## variable for goals the team scored in a match "Goal_scored" and next to it the average point they got "points_s",
## and  variable for goals the team received in a match "Goal_received" and next to it the average point they got "points_A".
## and our observations the range from 0 to 9
matrix<-matrix(nrow = 10,ncol = 4)
colnames(matrix)=c("Goal_scored","points_s","Goal_received","points_A")
matrix[,1]<-c(0:9)
matrix[,3]<-c(0:9)
## creating a loop to calculate the average point when scoring a goals in a range from 0 to 9
for(i in 0:9)
{
## in Home ground
home_score_i<-subset(PL_r,PL_r$HomeGoals==i)
home_score_i$points_h_i<-case_when(home_score_i$FTR=="HOME_WINS"~3,
home_score_i$FTR=="DRAWS"~1,
home_score_i$FTR=="AWAY_WINS"~0
)
all_points_gains_at_home_when_scored_i<-sum(home_score_i$points_h_i)
## in away grounds
away_score_i<-subset(PL_r,PL_r$AwayGoals==i)
away_score_i$points_a_i<-case_when(away_score_i$FTR=="HOME_WINS"~0,
away_score_i$FTR=="DRAWS"~1,
away_score_i$FTR=="AWAY_WINS"~3
)
all_points_gains_at_away_when_scored_i<-sum(away_score_i$points_a_i)
all_points_gains_when_scored_i<-all_points_gains_at_away_when_scored_i+all_points_gains_at_home_when_scored_i
average_points_when_scored_i<-all_points_gains_when_scored_i/(nrow(home_score_i)+nrow(away_score_i))
matrix[i+1,2]<-(average_points_when_scored_i)
}
## creating a loop to calculate the average point when receiving a goals in a range from 0 to 9
for(j in 0:9)
{
## in Home ground
home_against_j<-subset(PL_r,PL_r$AwayGoals==j)
home_against_j$points_h_j<-case_when(home_against_j$FTR=="HOME_WINS"~3,
home_against_j$FTR=="DRAWS"~1,
home_against_j$FTR=="AWAY_WINS"~0
)
all_points_gains_at_home_when_against_j<-sum(home_against_j$points_h_j)
## in Away grounds
away_against_j<-subset(PL_r,PL_r$HomeGoals==j)
away_against_j$points_a_j<-case_when(away_against_j$FTR=="HOME_WINS"~0,
away_against_j$FTR=="DRAWS"~1,
away_against_j$FTR=="AWAY_WINS"~3
)
all_points_gains_at_away_when_against_j<-sum(away_against_j$points_a_j)
all_points_gains_when_against_j<-all_points_gains_at_away_when_against_j+all_points_gains_at_home_when_against_j
average_points_when_against_j<-all_points_gains_when_against_j/(nrow(home_against_j)+nrow(away_against_j))
matrix[j+1,4]<-(average_points_when_against_j)
}
goals_points<-as.data.frame(matrix)
head(goals_points,10)
## tidying and plotting the data
goals_points2<-goals_points%>%
pivot_longer(c(`points_s`, `points_A`), names_to = "scored_vs_against", values_to = "Points")
ggplot(data = goals_points2,aes(x=Goal_scored,y=Points,col=scored_vs_against))+
geom_line()+
theme(legend.title=element_blank())+
theme(legend.position=c(0.05,0.94))+
scale_color_manual(labels = c("against", "scored"),
values = c( "red", "blue"))+
ggtitle("average points when the teams scored vs received a goals")+
xlab("Goals")+
ylab("points")
## creating a list that will contain every PL table
PL_Table<-list()
## creating a loop to deal with the data year by year
for(i in 1993:2022)
{
## creating subset contain every year results
PL_r_i<-subset(PL_r,PL_r$Season_End_Year==i)
## count of home goals, scored and against
PL_r_hgi<-PL_r_i%>%
group_by(Home)%>%
summarize(goal_scored_at_home=sum(HomeGoals),
goal_against_at_home=sum(AwayGoals))
## count of away goals, scored and against
PL_r_agi<-PL_r_i%>%
group_by(Away)%>%
summarize(goal_scored_at_away=sum(AwayGoals),
goal_against_at_away=sum(HomeGoals))
##home_and_away_goals
goals_i<-cbind(PL_r_hgi,PL_r_agi)
goals_i$GS<-(goals_i$goal_scored_at_away)+(goals_i$goal_scored_at_home)
goals_i$GA<-(goals_i$goal_against_at_away)+(goals_i$goal_against_at_home)
goals_i$GD<-(goals_i$GS)-(goals_i$GA)
goals2_i<-goals_i%>%
select(Home,GS,GA,GD)
##home result
PL_r_hri<-PL_r_i%>%
group_by(Home)%>%
count(FTR)
PL_r_hri$W<-case_when(PL_r_hri$FTR=="HOME_WINS"~PL_r_hri$n*1,
PL_r_hri$FTR=="DRAWS"~0,
PL_r_hri$FTR=="AWAY_WINS"~0
)
PL_r_hri$D<-case_when(PL_r_hri$FTR=="HOME_WINS"~0,
PL_r_hri$FTR=="DRAWS"~PL_r_hri$n*1,
PL_r_hri$FTR=="AWAY_WINS"~0
)
PL_r_hri$L<-case_when(PL_r_hri$FTR=="HOME_WINS"~0,
PL_r_hri$FTR=="DRAWS"~0,
PL_r_hri$FTR=="AWAY_WINS"~PL_r_hri$n*1
)
PL_r2_hri<-PL_r_hri%>%
group_by(Home)%>%
summarize(Wh=sum(W),Dh=sum(D),Lh=sum(L))
PL_r2_hri$hpoints<-(PL_r2_hri$Wh*3)+(PL_r2_hri$Dh*1)
##away result
PL_r_ari<-PL_r_i%>%
group_by(Away)%>%
count(FTR)
PL_r_ari$W<-case_when(PL_r_ari$FTR=="HOME_WINS"~0,
PL_r_ari$FTR=="DRAWS"~0,
PL_r_ari$FTR=="AWAY_WINS"~PL_r_ari$n*1
)
PL_r_ari$D<-case_when(PL_r_ari$FTR=="HOME_WINS"~0,
PL_r_ari$FTR=="DRAWS"~PL_r_ari$n*1,
PL_r_ari$FTR=="AWAY_WINS"~0
)
PL_r_ari$L<-case_when(PL_r_ari$FTR=="HOME_WINS"~PL_r_ari$n*1,
PL_r_ari$FTR=="DRAWS"~0,
PL_r_ari$FTR=="AWAY_WINS"~0
)
PL_r2_ari<-PL_r_ari%>%
group_by(Away)%>%
summarize(Wa=sum(W),Da=sum(D),La=sum(L))
PL_r2_ari$apoints<-(PL_r2_ari$Wa*3)+(PL_r2_ari$Da*1)
##home and away points
points_i<-cbind(PL_r2_ari,PL_r2_hri)
points_i$W<-(points_i$Wa)+(points_i$Wh)
points_i$D<-(points_i$Da)+(points_i$Dh)
points_i$L<-(points_i$La)+(points_i$Lh)
points_i$points<-(points_i$apoints)+(points_i$hpoints)
points2_i<-points_i%>%
select(Away,W,D,L,points)
Table_i<-cbind(goals2_i,points2_i)
Table2_i<-Table_i%>%
select(Home,W,D,L,GS,GA,GD,points)
Table3_i<-arrange(Table2_i,desc(points),desc(GD),desc(GS))
names(Table3_i)[names(Table3_i) == 'Home'] <- 'Team'
Table3_i$Season<-paste0(i-1,"/",i)
Table3_i$Rank<-1:case_when(i==1993~22,
i==1994~22,
i==1995~22,
TRUE ~ 20)
Table3_i<-Table3_i[,c(9,10,1,2,3,4,5,6,7,8)]
PL_Table[[i]]<-Table3_i
}
PL_Table[[2022]]
winner_points<-matrix(nrow = 30,ncol = 2)
colnames(winner_points)=c("Season_End_Year","winner_points")
winner_points<-as.data.frame(winner_points)
winner_points$Season_End_Year<-1993:2022
for (i in 1993:2022)
{
wi<-PL_Table[[i]]$points[PL_Table[[i]]$Rank==1]
winner_points[i-1992,2]<-wi
}
ggplot(data=winner_points)+
aes(x=Season_End_Year,y=winner_points)+
geom_line()+
ggtitle("points of winners of the PL")+
xlab("Season End Year")+
ylab("Points")
winners_of_pl<-matrix(nrow = 30,ncol = 2)
winners_of_pl<-as.data.frame(winners_of_pl)
names(winners_of_pl)=c("Season_End_Year","winner")
for(i in 1993:2022)
{
winners_of_pl[i-1992,1]<-paste0(i)
winner_i<-PL_Table[[i]]$Team[PL_Table[[i]]$Rank==1]
winners_of_pl[i-1992,2]<-winner_i
}
n_winners_of_pl<-winners_of_pl%>%
group_by(winner)%>%
count(winner)%>%
arrange(desc(n))
## plotting the result
ggplot(data = n_winners_of_pl,aes(x=n,y=reorder(winner,n),fill=winner))+
geom_col()+
ggtitle("Winners of PL")+
ylab("Team")+
xlab("Numbers of winning times")+
theme(legend.position="none")
## new subset with home results of Manchester United during the period of Sir Alex Ferguson
sir_home<-subset(PL_r,Home=="Manchester Utd"&Season_End_Year<=2013)%>%
arrange(Season_End_Year,Wk)
head(sir_home)
## new subset with away results of Manchester United during the period of Sir Alex Ferguson
sir_away<-subset(PL_r,Away=="Manchester Utd"&Season_End_Year<=2013)%>%
arrange(Season_End_Year,Wk)
head(sir_away)
##sir points at home
sir_home_point<-sir_home%>%
group_by(FTR)%>%
count(FTR)
sir_home_point$points<-case_when(sir_home_point$FTR=="HOME_WINS"~sir_home_point$n*3,
sir_home_point$FTR=="DRAWS"~sir_home_point$n*1,
sir_home_point$FTR=="AWAY_WINS"~sir_home_point$n*0
)
head(sir_home_point)
## sir points away home ground
sir_away_point<-sir_away%>%
group_by(FTR)%>%
count(FTR)
sir_away_point$points<-case_when(sir_away_point$FTR=="HOME_WINS"~sir_away_point$n*0,
sir_away_point$FTR=="DRAWS"~sir_away_point$n*1,
sir_away_point$FTR=="AWAY_WINS"~sir_away_point$n*3
)
head(sir_away_point)
## sir goals
##home
sir_goals_home<-sir_home%>%
group_by(Home)%>%
summarize(all_home_goal=sum(sir_home$HomeGoals),all_home_goal_against=sum(sir_home$AwayGoals))
head(sir_goals_home)
##away
sir_goals_away<-sir_away%>%
group_by(Away)%>%
summarize(all_away_goal=sum(sir_away$AwayGoals),all_away_goal_against=sum(sir_away$HomeGoals))
head(sir_goals_away)
sir_home_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+ggtitle("Sir Alex home games")
sir_home_point$Probabity<-sir_home_point$n/405
sir_home_point
sir_away_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+ggtitle("The number of games sir won at home")
sir_away_point$Probability <-sir_away_point$n/405
sir_away_point
## new subset with home results of Manchester City during the period of Pep Guardiola
pep_home<-subset(PL_r,Home=="Manchester City"&Season_End_Year>=2017)%>%
arrange(Season_End_Year,Wk)
head(pep_home)
## new subset with away results of Manchester City during the period of Pep Guardiola
pep_away<-subset(PL_r,Away=="Manchester City"&Season_End_Year>=2017)%>%
arrange(Season_End_Year,Wk)
head(pep_away)
## Pep points at home ground
pep_home_point<-pep_home%>%
group_by(FTR)%>%
count(FTR)
pep_home_point$points<-case_when(pep_home_point$FTR=="HOME_WINS"~pep_home_point$n*3,
pep_home_point$FTR=="DRAWS"~pep_home_point$n*1,
pep_home_point$FTR=="AWAY_WINS"~pep_home_point$n*0
)
head(pep_home_point)
## Pep points at away grounds
pep_away_point<-pep_away%>%
group_by(FTR)%>%
count(FTR)
pep_away_point$points<-case_when(pep_away_point$FTR=="AWAY_WINS"~pep_away_point$n*3,
pep_away_point$FTR=="HOME_WINS"~pep_away_point$n*0,
pep_away_point$FTR=="DRAWS"~pep_away_point$n*1
)
head(pep_away_point)
## pep goals:
##home
pep_goals_home<-pep_home%>%
group_by(Home)%>%
summarize(all_home_goal=sum(pep_home$HomeGoals),all_home_goal_against=sum(pep_home$AwayGoals))
head(pep_goals_home)
##away
pep_goals_away<-pep_away%>%
group_by(Away)%>%
summarize(all_away_goal=sum(pep_away$AwayGoals),all_away_goal_against=sum(pep_away$HomeGoals))
head(pep_goals_home)
ggplot(data=pep_home_point,mapping = aes(x=FTR,y=n))+geom_col()+labs(title = " Pep Guardiola's number of wins draws and loses at Home")
pep_home_point$Probability <- pep_home_point$n/146
pep_home_point
pep_away_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+labs(title = "Pep Guardiola's number of away wins , loses and draws")
pep_away_point$probablity<- pep_away_point$n/145
pep_away_point
## new subset with home results of Liverpool during the period of Klopp
klopp_home<-subset(PL_r,Home=="Liverpool"&Season_End_Year>=2015)%>%
arrange(Season_End_Year,Wk)
head(klopp_home)
## new subset with away results of Manchester City during the period of klopp
klopp_away<-subset(PL_r,Away=="Manchester City"&Season_End_Year>=2015)%>%
arrange(Season_End_Year,Wk)
head(klopp_away)
## Pep points at home ground
klopp_home_point<-klopp_home%>%
group_by(FTR)%>%
count(FTR)
klopp_home_point$points<-case_when(klopp_home_point$FTR=="HOME_WINS"~klopp_home_point$n*3,
klopp_home_point$FTR=="DRAWS"~klopp_home_point$n*1,
klopp_home_point$FTR=="AWAY_WINS"~klopp_home_point$n*0
)
head(klopp_home_point)
## Pep points at away grounds
klopp_away_point<-klopp_away%>%
group_by(FTR)%>%
count(FTR)
klopp_away_point$points<-case_when(klopp_away_point$FTR=="AWAY_WINS"~klopp_away_point$n*3,
klopp_away_point$FTR=="HOME_WINS"~klopp_away_point$n*0,
klopp_away_point$FTR=="DRAWS"~klopp_away_point$n*1
)
head(klopp_away_point)
## pep goals:
##home
klopp_goals_home<-klopp_home%>%
group_by(Home)%>%
summarize(all_home_goal=sum(klopp_home$HomeGoals),all_home_goal_against=sum(klopp_home$AwayGoals))
head(klopp_goals_home)
##away
klopp_goals_away<-klopp_away%>%
group_by(Away)%>%
summarize(all_away_goal=sum(klopp_away$AwayGoals),all_away_goal_against=sum(klopp_away$HomeGoals))
head(klopp_goals_home)
klopp_home_point %>% ggplot(mapping=aes(x=FTR,y=n))+geom_col()+ggtitle("Klopps games won,drawed and lost at Home")+xlab("Full time home Resulty")+ylab("Number of home games")
klopp_home_point$Probability <- klopp_home_point$n/183
klopp_home_point
klopp_away_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+ggtitle("Klopps aways games")+xlab("Full time away Resulty")+ylab("Number of away games")
klopp_away_point$Probabilty<-klopp_away_point$n/183
klopp_away_point
## new subset with home results of Chelsea during the first period of Jose Mourinho
jose1_home<-subset(PL_r,Home=="Chelsea"& Date>="2004-08-14"&Date<="2007-09-15")%>%
arrange(Season_End_Year,Wk)
head(jose1_home)
## new subset with away results of Chelsea during the first period of Jose Mourinho
jose1_away<-subset(PL_r,Away=="Chelsea"& Date>="2004-08-14"&Date<="2007-09-15")%>%
arrange(Season_End_Year,Wk)
head(jose1_away)
##jose points at home ground
jose1_home_point<-jose1_home%>%
group_by(FTR)%>%
count(FTR)
jose1_home_point$points<-case_when(jose1_home_point$FTR=="HOME_WINS"~jose1_home_point$n*3,
jose1_home_point$FTR=="DRAWS"~jose1_home_point$n*1,
jose1_home_point$FTR=="AWAY_WINS"~jose1_home_point$n*0
)
head(jose1_home_point)
##jose points at away grounds
jose1_away_point<-jose1_away%>%
group_by(FTR)%>%
count(FTR)
jose1_away_point$points<-case_when(jose1_away_point$FTR=="AWAY_WINS"~jose1_away_point$n*3,
jose1_away_point$FTR=="HOME_WINS"~jose1_away_point$n*0,
jose1_away_point$FTR=="DRAWS"~jose1_away_point$n*1
)
jose1_away_point
## jose goals:
##home
jose1_goals_home<-jose1_home%>%
group_by(Home)%>%
summarize(all_home_goal=sum(jose1_home$HomeGoals),all_home_goal_against=sum(jose1_home$AwayGoals))
head(jose1_goals_home)
##away
jose1_goals_away<-jose1_away%>%
group_by(Away)%>%
summarize(all_away_goal=sum(jose1_away$AwayGoals),all_away_goal_against=sum(jose1_away$HomeGoals))
head(jose1_goals_away)
jose1_home_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+ggtitle("Jose Home games")+xlab("Full time away Resulty")+ylab("Number of away games")
jose1_home_point$Probabity<-jose1_home_point$n/60
jose1_home_point
jose1_away_point %>% ggplot(mapping = aes(x=FTR,y=n))+geom_col()+ggtitle("Jose away games")
jose1_away_point$Probability<-jose1_away_point$n/60
jose1_away_point
# Creating a tibble
my_table <- tibble(Coach_name =c("Sir_Alex","Pep","Klopp","Jose"),Prob_of_wining_away_games= c(0.55,0.689,0.683,0.65),prob_of_home_games=c(0.75,0.781,0.68,0.767) )
my_table
my_table$sum_of_prob<-my_table$Prob_of_wining_away_games+my_table$prob_of_home_games
my_table
my_table %>% ggplot(mapping = aes(x=Coach_name,y=sum_of_prob))+geom_col()+coord_flip()+ggtitle("The best Coach in the Premier Legue ")
